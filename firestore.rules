rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Patient data rules - sessions/{date}/patients/{patientId}
    match /sessions/{date}/patients/{patientId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Daily sessions data
    match /daily_sessions/{document=**} {
      allow read, write: if isAuthenticated();
    }
    
    // User-specific data
    match /users/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }
    
    // Shared clinical data (read-only for authenticated users)
    match /clinical/{document=**} {
      allow read: if isAuthenticated();
      allow write: if false; // Admin only via Admin SDK
    }
    
    // Configuration and settings (read-only for authenticated users)
    match /config/{document=**} {
      allow read: if isAuthenticated();
      allow write: if false; // Admin only
    }
    
    // Audit logs (read-only for authenticated users, write via Admin SDK only)
    match /audit/{document=**} {
      allow read: if isAuthenticated();
      allow write: if false; // Admin SDK only for HIPAA compliance
    }
    
    // Test collections for credential verification
    match /_credential_test/{document=**} {
      allow read, write: if true; // Allow for automated testing
    }
    
    // Health check collection for monitoring
    match /_health_check/{document=**} {
      allow read: if isAuthenticated(); // Read-only for credential checks
      allow write: if false; // Admin SDK only
    }
    
    // Debug sessions - limited debugging collection
    match /debug_sessions/{sessionId} {
      allow read, write: if isAuthenticated() && 
        request.auth.uid == resource.data.userId; // User can only access their own debug sessions
    }
    
    // Deny everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}