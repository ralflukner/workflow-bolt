feat: add Firebase Functions setup for Tebra EHR integration

This commit introduces a comprehensive setup for integrating Tebra EHR with Firebase Cloud Functions, enabling secure server-side SOAP API calls and robust data synchronization capabilities.

## Key Components

### Server-Side Implementation
- Created Firebase Functions infrastructure with Node.js 20 runtime
- Implemented TebraSoapClient class for SOAP API communication
- Added rate limiting mechanism to prevent API overload
- Developed both callable and scheduled functions for different integration needs
- Set up error handling and logging for reliable operation

### Client-Side Integration
- Created TebraApiService for type-safe interaction with Firebase Functions
- Implemented graceful fallbacks for environments without Firebase
- Added TebraIntegrationNew component with intuitive UI controls
- Integrated the component into the main Dashboard

### Documentation & Configuration
- Added detailed FIREBASE_SETUP.md with comprehensive setup instructions
- Included security best practices and troubleshooting guidance
- Configured firebase.json for proper deployment settings
- Set up package.json with required dependencies

## Features

### Firebase Functions
- tebraTestConnection: Tests API connectivity
- tebraGetPatient: Retrieves patient by ID
- tebraSearchPatients: Searches for patients by criteria
- tebraGetAppointments: Gets appointments by date
- tebraGetProviders: Retrieves all providers
- tebraCreateAppointment: Creates new appointments
- tebraUpdateAppointment: Updates existing appointments
- tebraSyncTodaysSchedule: Syncs and stores today's schedule
- tebraAutoSync: Scheduled function for automatic syncing (every 15 minutes during business hours)

### Benefits
- Improved security by moving API credentials to server-side
- Enhanced reliability with rate limiting and error handling
- Better performance through scheduled synchronization
- Simplified client-side code with type-safe interfaces
- Comprehensive documentation for future maintenance

This implementation provides a solid foundation for the Tebra EHR integration, enabling secure and efficient patient data management while maintaining a clean separation between client and server responsibilities.