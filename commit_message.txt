feat(tebra): Implement Tebra API integration with debugging tools
feat(ui): Implement synchronized scrolling for patient lists
fix(docs): Fix typos in README.md
fix(debug): Enhance debugging capabilities

This commit adds comprehensive integration with the Tebra EHR API via SOAP, 
including appointment retrieval, patient data handling, and persistence improvements.
This commit adds scroll synchronization functionality to the patient list components,
improving the user experience when viewing multiple patient lists simultaneously.

Key changes:
- Enhanced TebraSoapClient with robust error handling and rate limiting
- Added type definitions for Tebra API entities (patients, appointments, providers)
- Implemented Firebase debugging tools to diagnose persistence issues
- Created utility functions for testing Tebra appointment retrieval
- Added date debugging utilities to ensure proper date formatting
- Updated Dashboard and DiagnosticPanel to include new debugging components
- Improved PatientContext to better handle data from Tebra API
- Added SOAP UI project file for API testing and documentation
- Corrected an erroneous 't' entry in .gitignore
- Added scroll position tracking and synchronization to PatientList component
- Implemented relative scroll position calculation for consistent behavior
- Updated PatientSection component to pass scroll props to PatientList
- Added event handlers to capture and propagate scroll events
- Fixed typos in README.md (npm start command and Pull Request text)
- Enhanced DebugTextWindow with additional console logging for better debugging
- Fixed date format regex in TebraSoapClient to correctly validate ISO 8601 timestamps

These changes enable the application to reliably fetch and display patient 
appointments from Tebra EHR, with proper error handling and debugging capabilities
to ensure smooth integration in production environments.

These changes ensure that when a user scrolls one patient list, other lists can
be synchronized to maintain the same relative scroll position, creating a more
cohesive and intuitive interface for healthcare providers managing multiple
patient categories.
